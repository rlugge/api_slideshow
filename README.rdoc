This is a 'living slideshow' of code for the purposes of demonstrating various concepts regarding programming an API in Ruby on Rails.  This slideshow is aimed primarily and specifically at an API-only construct but can be used in conjuction with other techniques to build a more fully featured side.  Please check out the commits at various stages to view the various states of the app and the information that should be gleaned from each of them.

===========

Oh, wait -- if you've been writing tests, doing requests, or just plain paying attention, you might have spotted an issue.

Our first two error states return the same message!  Lets go ahead and break them apart a bit.  Add the following two exception classes to your api_controller:

  class InvalidAuthorizationToken < Unauthenticated; end
  class MissingAuthorizationToken < Unauthenticated; end

Now, change our single rescue_from block into a set of three.  Define your own error messages, but you want to catch each of the three distinct possibilities.  Invalid token, missing token, and simply unauthenticated.  While we currently don't do anything with that class other than subclass it, my opinion on good practices is that you should still have a base catcher for it, just in case you later add a third subclass to it.  Otherwise, when you start throwing SessionAgedOut unauthentication exceptions, you aren't going to know why you're getting a 500 error!  At least htis way, you'll *know* it's your authentication scheme failing.